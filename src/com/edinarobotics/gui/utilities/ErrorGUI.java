 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ErrorGUI.java
 *
 * Created on Feb 28, 2012, 6:31:09 PM
 */

package com.edinarobotics.gui.utilities;

import com.edinarobotics.logger.Logger;
import com.edinarobotics.scout.Global;

/*
 * @author aoneill
 * @note Made by the Netbeans built-in GUI creator
 */
public class ErrorGUI extends javax.swing.JFrame
{
    // Logger for the class
    private static Logger log = Global.log;
    private static String LOG_TAG = "Error";
    
    // Error level possibilities
    public static final int ERROR_LOW = 1;
    public static final int ERROR_MEDUIM = 2;
    public static final int ERROR_HIGH = 3;
    public static final int ERROR_SEVERE = 4;

    // Variables to store the message's error information
    private String errorMessage;
    private int level;
    
    /**
     * Constructor used in the main function of this class
     */
    private ErrorGUI() {}

    /**
     * Creates a new Error GUI
     * @param errorMessage the message to be displayed
     * @param level the level of the error
     */
    public ErrorGUI(String errorMessage, int level)
    {
        // Init components
        initComponents();

        // Update the global variables with the values wanted
        this.errorMessage = errorMessage;
        this.level = level;
        
        // Show the Error Data
        init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textArea.setColumns(20);
        textArea.setEditable(false);
        textArea.setRows(5);
        scrollPane.setViewportView(textArea);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(scrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(scrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Init various things
     */
    private void init()
    {
        // Update the title with the text speciifed based on the Error level
        switch(level)
        {
            case ERROR_LOW:
                updateTitle("Low");
                break;

            case ERROR_MEDUIM:
                updateTitle("Medium");
                break;

            case ERROR_HIGH:
                updateTitle("High");
                break;

            // In the severe case, stop the program once that window closes, and
            // always keep th GUI on top
            case ERROR_SEVERE:
                updateTitle("SEVERE");

                setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
                setAlwaysOnTop(true);

                break;
                
            // If the level specified does not match, name it generic
            default:
                updateTitle("Generic");
                break;
        }

        // Set the display text with the error message
        textArea.setText(errorMessage);
        
        // Log the Error
        log.log(LOG_TAG, errorMessage);

        // Set the GUI Visible
        setVisible(true);
    }

    /**
     * Update the title of the GUI with the specified text
     * @param text the String to be added to the title
     */
    private void updateTitle(String text)
    {
        setTitle("Error: " + text + " Level");
    }

    /**
     * The Main runnable function
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ErrorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

}
